{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\n\nfunction UserPhoto(_ref) {\n  var id = _ref.id;\n\n  var _useState = useState(false),\n      SRC = _useState[0],\n      setSRC = _useState[1];\n\n  var _useState2 = useState(false),\n      upload = _useState2[0],\n      setUpload = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var request, blob, src;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://localhost:3001/upload/\".concat(id)));\n\n            case 2:\n              request = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(request.blob());\n\n            case 5:\n              blob = _context.sent;\n              src = URL.createObjectURL(blob);\n\n              if (!upload) {\n                setSRC(src);\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    return function () {\n      URL.revokeObjectURL(SRC);\n      setUpload(true);\n    };\n  }, []);\n  return __jsx(React.Fragment, null, SRC && __jsx(\"img\", {\n    src: SRC,\n    alt: \"userPhoto\",\n    className: \"jsx-1733472280\"\n  }), __jsx(_JSXStyle, {\n    id: \"1733472280\"\n  }, [\"img.jsx-1733472280{height:100%;}\"]));\n}\n\nexport default UserPhoto;","map":null,"metadata":{},"sourceType":"module"}
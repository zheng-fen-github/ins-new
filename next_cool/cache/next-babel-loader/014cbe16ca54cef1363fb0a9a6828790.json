{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default function UseDataGet(initialValue, initialUrl) {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    message: null\n  });\n  const {\n    0: fetching,\n    1: setFetching\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: uncount,\n    1: setUncount\n  } = useState(false);\n  const {\n    0: url,\n    1: setUrl\n  } = useState(initialUrl);\n  useEffect(() => {\n    let getData = async () => {\n      setError(false);\n      setFetching(true);\n      let request = await fetch(url);\n\n      try {\n        let data = await request.json();\n        setState(data);\n        setFetching(false);\n      } catch (err) {\n        console.log(err);\n        setError(true);\n      }\n    };\n\n    if (!uncount) getData();\n    return () => {\n      setUncount(true);\n    };\n  }, [url]);\n  return [state, fetching, error, setUrl];\n}","map":{"version":3,"sources":["C:/test/component/public/useDateGet.js"],"names":["React","useEffect","useState","axios","UseDataGet","initialValue","initialUrl","state","setState","message","fetching","setFetching","error","setError","uncount","setUncount","url","setUrl","getData","request","fetch","data","json","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAiB,SAASC,UAAT,CAAoBC,YAApB,EAAiCC,UAAjC,EAA6C;AAEtD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAOC;AAAP,MAAmBN,QAAQ,CAAC;AAACO,IAAAA,OAAO,EAAC;AAAT,GAAD,CAAjC;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAUC;AAAV,MAAyBT,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAOC;AAAP,MAAmBX,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM;AAAA,OAACY,OAAD;AAAA,OAASC;AAAT,MAAuBb,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM;AAAA,OAACc,GAAD;AAAA,OAAKC;AAAL,MAAef,QAAQ,CAACI,UAAD,CAA7B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACb,QAAIiB,OAAO,GAAG,YAAY;AACtBL,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACC,UAAIQ,OAAO,GAAE,MAAMC,KAAK,CAACJ,GAAD,CAAxB;;AACA,UAAG;AACC,YAAIK,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAjB;AACAd,QAAAA,QAAQ,CAACa,IAAD,CAAR;AACAV,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH,OAJD,CAIC,OAAMY,GAAN,EAAU;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAV,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACL,KAZD;;AAaA,QAAG,CAACC,OAAJ,EAAaI,OAAO;AACpB,WAAO,MAAM;AACTH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD;AAGF,GAlBQ,EAkBP,CAACC,GAAD,CAlBO,CAAT;AAmBA,SAAO,CAACT,KAAD,EAAOG,QAAP,EAAgBE,KAAhB,EAAsBK,MAAtB,CAAP;AAEL","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nexport default   function UseDataGet(initialValue,initialUrl) {\r\n\r\n        const [state,setState] = useState({message:null});\r\n        const [fetching,setFetching] = useState(false);\r\n        const [error,setError] = useState(false);\r\n        const [uncount,setUncount] = useState(false);\r\n        const [url,setUrl] = useState(initialUrl); \r\n\r\n        useEffect(() => {\r\n           let getData = async () => {\r\n               setError(false);\r\n               setFetching(true);               \r\n                let request =await fetch(url);\r\n                try{\r\n                    let data = await request.json();\r\n                    setState(data);\r\n                    setFetching(false);\r\n                }catch(err){\r\n                    console.log(err);\r\n                    setError(true);\r\n                }\r\n           }\r\n           if(!uncount) getData()\r\n           return () => {\r\n               setUncount(true);\r\n           }\r\n        },[url])     \r\n        return [state,fetching,error,setUrl]\r\n    \r\n  }\r\n \r\n\r\n"]},"metadata":{},"sourceType":"module"}
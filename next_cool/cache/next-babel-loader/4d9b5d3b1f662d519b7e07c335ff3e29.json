{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default function UseDataGet(initialValue, initialUrl) {\n  var _useState = useState({\n    message: null\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(false),\n      fetching = _useState2[0],\n      setFetching = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var _useState4 = useState(false),\n      uncount = _useState4[0],\n      setUncount = _useState4[1];\n\n  var _useState5 = useState(initialUrl),\n      url = _useState5[0],\n      setUrl = _useState5[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      var request, data;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setError(false);\n              setFetching(true);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 4:\n              request = _context.sent;\n              _context.prev = 5;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(request.json());\n\n            case 8:\n              data = _context.sent;\n              setState(data);\n              setFetching(false);\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](5);\n              console.log(_context.t0);\n              setError(true);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[5, 13]]);\n    };\n\n    if (!uncount) getData();\n    return function () {\n      setUncount(true);\n    };\n  }, [url]);\n  return [state, fetching, error, setUrl];\n}","map":null,"metadata":{},"sourceType":"module"}